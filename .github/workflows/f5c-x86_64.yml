name: Linux x86_64

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:
  ubuntu_14_local_hts:
    name: ubuntu 14 local hts
    runs-on: ubuntu-18.04
    container: ubuntu:14.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev gcc g++ autoconf automake make wget
    - name: env
      run: lsb_release -a &&  ldd --version && gcc --version && g++ --version
    - name: build
      run: autoreconf && ./scripts/install-hts.sh && ./configure && make -j8
    - name: test
      run: make test
  ubuntu_16_install_scripts:
    name: Ubuntu 16 install scripts
    runs-on: ubuntu-18.04
    container: ubuntu:16.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev valgrind gcc g++ autoconf automake make wget bzip2
    - name: build
      run: autoreconf && ./scripts/install-hdf5.sh &&./scripts/install-hts.sh && ./configure --enable-localhdf5 && make -j8
    - name: test
      run: make test
    - name: test valgrind
      run: valgrind --leak-check=full --error-exitcode=1 ./f5c call-methylation -b test/ecoli_2kb_region/reads.sorted.bam -g test/ecoli_2kb_region/draft.fa -r test/ecoli_2kb_region/reads.fasta -t 8 -K 256 -B 2M > /dev/null
  ubuntu_16_pure_make:
    name: Ubuntu 16 pure make
    runs-on: ubuntu-18.04
    container: ubuntu:16.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev gcc g++ autoconf automake make wget bzip2
    - name: build
      run: make
    - name: test
      run: make test
  ubuntu_18:
    name: Ubuntu 18
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev
    - name: build
      run: autoreconf && ./scripts/install-hts.sh && ./configure && make -j8
    - name: test
      run: make test
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev libhdf5-dev
    - name: build
      run: autoreconf && ./scripts/install-hts.sh && ./configure && make -j8
    - name: test
      run: make test
  ubuntu_22:
    name: Ubuntu 22
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev
    - name: build
      run: autoreconf --install && ./scripts/install-hts.sh && ./configure && make -j8 disable_hdf5=1
  ubuntu_14_cuda_6_5:
    name: Ubuntu 14 cuda 6.5
    runs-on: ubuntu-18.04
    container: ubuntu:14.04
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: sudo apt-get update && sudo apt-get install -y zlib1g-dev  libhdf5-dev gcc g++ autoconf automake make wget
    - name: env
      run: lsb_release -a &&  ldd --version && gcc --version && g++ --version
    - name: cuda repo setup
      run: wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_7.0-28_amd64.deb && sudo dpkg -i cuda-repo-ubuntu1404_7.0-28_amd64.deb && sudo apt-get update
    - name: cuda install
      run: sudo apt-get install -y cuda-core-6-5 cuda-cudart-dev-6-5
    - name: cuda env setup
      run: sudo ln -s /usr/local/cuda-6.5/ /usr/local/cuda
    - name: build
      run: export PATH=/usr/local/cuda/bin:${PATH} && autoreconf && ./scripts/install-hts.sh && ./configure && make cuda=1 -j8
    - name: test
      run: make test || scripts/test.sh custom --disable-cuda=yes
  os_x_11:
    name: OSX 11
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: brew install hdf5 autoconf automake
    - name: build
      run: autoreconf --install && ./scripts/install-hts.sh && ./configure && make -j8
    - name: test
      run: make test
  os_x_11_2:
    name: OSX 11 hdf5 install script
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v2
    - name: install packages
      run: brew install hdf5 autoconf automake
    - name: build
      run: autoreconf --install && CC=gcc CXX=g++ CFLAGS="-Wno-implicit-function-declaration" ./scripts/install-hdf5.sh  && ./scripts/install-hts.sh && ./configure --enable-localhdf5  && make -j8
    - name: test
      run: make test
  ubuntu_arm:
    name: ubuntu arm
    runs-on: ubuntu-latest
    steps:
    - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: 'uname -a'
    - uses: actions/checkout@v1
    - uses: docker://multiarch/ubuntu-core:arm64-bionic
      with:
        args: >
          bash -c "apt-get update &&
          apt-get install -y zlib1g-dev libhdf5-dev gcc g++ autoconf automake make wget &&
          ldd --version && gcc --version && g++ --version &&
          autoreconf &&
          ./scripts/install-hts.sh &&
          ./configure &&
          make -j8 &&
          make test"
